# Generated by Django 5.1.1 on 2024-12-25 07:00

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CalendarUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('google_id', models.CharField(editable=False, max_length=100, unique=True, verbose_name='ID do usuário')),
                ('first_name', models.CharField(default='user', max_length=50, verbose_name='Nome de usuário')),
                ('full_name', models.CharField(default='user', max_length=100, verbose_name='Nome Completo')),
                ('profile_picture', models.URLField(default='png', verbose_name='Imagem de perfil')),
                ('access_token', models.CharField(editable=False, max_length=255, verbose_name='Token de acesso')),
                ('refresh_token', models.CharField(editable=False, max_length=255, verbose_name='Token de substituição')),
                ('expiry', models.DateTimeField(max_length=27, verbose_name='Expiração do token')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Is staff')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Is superuser')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
